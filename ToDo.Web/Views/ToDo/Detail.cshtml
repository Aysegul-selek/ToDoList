@model List<ToDoAPI.Entities.DTOs.ToDo.TodoDto>

<h1>ToDo List</h1>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>User</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var todo in Model)
        {
            <tr>
                <td>@todo.Title</td>
                <td>@todo.Description</td>
                <td>@todo.Status</td>
                <td>@todo.UserName</td>
                <td>
                    <!-- Update Button -->
                    <button class="btn btn-warning btn-sm me-1 edit-btn"
                            data-id="@todo.TodoId"
                            data-title="@todo.Title"
                            data-description="@todo.Description"
                            data-status="@todo.Status"
                            data-user="@todo.UserName"
                            data-bs-toggle="modal"
                            data-bs-target="#editModal">
                        ✏️ Update
                    </button>

                    <!-- Delete Button -->
                    <form asp-action="Delete" asp-controller="ToDo" method="post" asp-route-id="@todo.TodoId"
                          style="display:inline;"
                          onsubmit="return confirm('Bu görevi silmek istediğine emin misin?');">
                        <button type="submit" class="btn btn-danger btn-sm">🗑 Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- EDIT MODAL -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editForm">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Todo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="todoId" />
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input class="form-control" id="title" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <input class="form-control" id="status" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">User</label>
                        <input class="form-control" id="user" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {

            // Modal açılırken değerleri doldur
            document.querySelectorAll('.edit-btn').forEach(btn => {
                btn.addEventListener('click', () => {
                    document.getElementById('todoId').value = btn.dataset.id;
                    document.getElementById('title').value = btn.dataset.title;
                    document.getElementById('description').value = btn.dataset.description;
                    document.getElementById('status').value = btn.dataset.status;
                    document.getElementById('user').value = btn.dataset.user;
                });
            });

            // Submit -> PUT /ToDo/Update/{id}
            document.getElementById('editForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const id = document.getElementById('todoId').value;
                const payload = {
                    Title: document.getElementById('title').value,
                    Description: document.getElementById('description').value,
                    Status: document.getElementById('status').value,
                    UserName: document.getElementById('user').value
                };

                const res = await fetch(`/ToDo/Update/${id}`, {
                    method: 'PUT', // POST yerine PUT
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if(res.ok) location.reload();
                else alert('Update failed!');
            });

        });
    </script>

}
